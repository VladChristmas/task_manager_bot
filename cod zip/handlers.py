"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è Telegram –±–æ—Ç–∞
"""
import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    CallbackContext, 
    CommandHandler, 
    MessageHandler, 
    Filters
)
from database import Database
from navigation_manager import NavigationManager
from constants import *
from utils import (
    is_valid_report_format,
    is_valid_file_size,
    format_report_info,
    is_admin
)

logger = logging.getLogger(__name__)
db = Database("bot_database.db")
nav_manager = NavigationManager()

def start_command(update: Update, context: CallbackContext):
    """Handle /start command"""
    try:
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
        keyboard = [
            [KeyboardButton("üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ")],
            [KeyboardButton("üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π")],
            [KeyboardButton("üë• –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤")],
            [KeyboardButton("üë• –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É —á–∞—Ç–æ–≤")],
            [KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
            [KeyboardButton("‚ùì –ü–æ–º–æ—â—å")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=reply_markup)
        logger.info("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ")
    except Exception as e:
        logger.error(f"Error in start command: {e}", exc_info=True)
        error_handler(update, context)

def help_command(update: Update, context: CallbackContext):
    """Handle help command"""
    try:
        update.message.reply_text(HELP_TEXT)
    except Exception as e:
        logger.error(f"Error in help command: {e}", exc_info=True)
        error_handler(update, context)

def add_chat_command(update: Update, context: CallbackContext):
    """Handle add chat command"""
    try:
        update.message.reply_text("–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ")
    except Exception as e:
        logger.error(f"Error in add chat command: {e}", exc_info=True)
        error_handler(update, context)

def handle_text_message(update: Update, context: CallbackContext):
    """Handle text messages"""
    try:
        message_text = update.message.text
        logger.info(f"Received text message from user {update.effective_user.id}: {message_text}")
        update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ")
    except Exception as e:
        logger.error(f"Error in text message handler: {e}", exc_info=True)
        error_handler(update, context)

def error_handler(update: Update, context: CallbackContext):
    """Handle errors"""
    logger.error(f"Update {update} caused error {context.error}")
    if update and update.effective_message:
        update.effective_message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

def register_handlers(dispatcher):
    """Register all handlers"""
    try:
        # Basic commands
        dispatcher.add_handler(CommandHandler("start", start_command))
        dispatcher.add_handler(CommandHandler("help", help_command))
        dispatcher.add_handler(CommandHandler("addchat", add_chat_command))

        # Message handlers
        dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_text_message))

        # Error handler
        dispatcher.add_error_handler(error_handler)

        logger.info("Handlers registered successfully")
    except Exception as e:
        logger.error(f"Error registering handlers: {e}", exc_info=True)
        raise